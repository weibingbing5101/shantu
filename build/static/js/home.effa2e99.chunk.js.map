{"version":3,"file":"static/js/home.effa2e99.chunk.js","mappings":"mLAEO,MAAMA,EAAWC,IACfC,EAAAA,EAAAA,IAAO,gBAAiB,IAAKD,IAGzBE,EAAYF,IAChBC,EAAAA,EAAAA,IAAO,iBAAkB,IAAKD,IAG1BG,EAAcH,IAClBI,EAAAA,EAAAA,IAAO,mBAAoB,IAAKJ,IAO5BK,EAAaL,IACjBC,EAAAA,EAAAA,IAAO,eAAgBD,GAGnBM,EAAcN,IAClBI,EAAAA,EAAAA,IAAO,gBAAiBJ,E,+FCpB1B,MAAMO,EAAaC,GACjB,CAAC,MAAO,KAAKC,SAASD,GAGlBE,EAAaF,GACjB,CAAC,SAAU,QAAQC,SAASD,GAGxBG,EAAY,GAEnBC,EAAWC,EAAAA,EAAMC,OAAO,CAC5BC,QAAS,yCAETC,QAAS,IACTC,QAAS,CACP,eAAgB,kCAGlBC,iBAAiB,IAGnBN,EAASO,aAAaC,QAAQC,KAC5B,SAAUC,GAER,OAAOA,CACT,IACA,SAAUC,GAER,OAAOC,QAAQC,OAAOF,EACxB,IAIFX,EAASO,aAAaO,SAASL,KAC7B,SAAUK,GAER,OAAOA,CACT,IACA,SAAUH,GAER,OAAOC,QAAQC,OAAO,CACpBjB,KAAMe,EAAMG,SAAS1B,KAAK2B,OAC1B3B,KAAMuB,EAAMG,SAAS1B,KAAKuB,OAAS,gEAEvC,IAGK,MAAMtB,EAASA,CAAC2B,EAAa5B,IAC3B,IAAIwB,SAAQ,CAACK,EAASJ,KAC3B,MAAM,SAAEK,IAAaC,EAAAA,EAAAA,MACfC,EAAQF,IACRG,EAAe,CACnBL,IAAKA,EACLM,OAAQ,OACRlC,KAAMmC,OAAOC,OAAO,IAAKpC,IACzBiB,QAAS,CACPe,UAGJpB,EACGQ,QAAQa,GACRI,MAAMrC,IACL6B,EAAQ7B,EAAKA,KAAK,IAEnBsC,OAAOC,IACNd,EAAOc,EAAEC,QAAQ,GACjB,IAIKpC,EAASA,CAACwB,EAAa5B,IAE3B,IAAIwB,SAAQ,CAACK,EAASJ,KAC3B,MAAM,SAAEK,IAAaC,EAAAA,EAAAA,MACfC,EAAQF,IACRG,EAAe,CACnBL,IAAKA,EACLM,OAAQ,MACRO,OAAQzC,EACRiB,QAAS,CACPe,UAGJpB,EACGQ,QAAQa,GACRI,MAAMrC,IACL6B,EAAQ7B,EAAKA,KAAK,IAEnBsC,OAAOC,IACNd,EAAOc,EAAEC,QAAQ,GACjB,G,2FC5FR,QAA2B,wBAA3B,EAA6D,uBAA7D,EAA4F,qB,2HCS5F,MAkLA,EAlLYE,KACV,MAAOC,IAAWC,EAAAA,EAAAA,WAAS,IACpBC,EAAUC,IAAeF,EAAAA,EAAAA,UAAc,IACxCG,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAYD,EAAAA,EAAAA,QAAO,OAClBE,EAAQC,IAAaP,EAAAA,EAAAA,UAAS,IAC/BQ,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,CACZC,OAAQ5C,EAAAA,GACR6C,UAAU,EACVvC,QAAS,CAAC,EACVwC,gBAAgB,EAChBC,OAAAA,CAAQC,GACN,EAEFC,SAAAA,CAAUC,EAAKF,GACb,EAEFG,OAAAA,CAAQC,GACN,EAGFC,UAAAA,CAAUC,EAAcN,GAAO,IAApB,QAAEO,GAASD,CAEtB,EAGAE,cAAe,SAAUC,GAGvB,MAAMC,EAAS,IAAIC,WAcnB,OAbAD,EAAOE,cAAcH,EAAOT,MAC5BU,EAAOG,UAAY,SAAUjC,GAC3BQ,EAAU0B,QAAUlC,EAAEmC,OAAOC,OAC7B1B,EAAUwB,QAAUL,EAGhB7B,GAAKA,EAAEmC,QAAUnC,EAAEmC,OAAOC,QAI5B7B,EAAYuB,EAAOM,OAEvB,EACO,CACLC,KAAAA,GACEC,EAAAA,GAAQtD,MAAM,CACZuD,QAAS,wFAEb,EAEJ,EACAC,aAAc,SAAUpB,GACtB,MAAMqB,EAA2B,eAAdrB,EAAKsB,MAAuC,cAAdtB,EAAKsB,KACtD,IAAKD,EAEH,OADAH,EAAAA,GAAQtD,MAAM,sDACP,EAET,MAAM2D,EAASvB,EAAKwB,KAAO,KAAO,KAAOC,EAAAA,GACzC,OAAKF,EAIEF,GAAcE,GAHnBL,EAAAA,GAAQtD,MAAM,6CAAU6D,EAAAA,UACjB,EAGX,GAwFF,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAeC,UAC7BC,EAAAA,EAAAA,KAAA,OAAKC,IAAK7C,GAAY8C,EAAOC,IAAI,cAEnCH,EAAAA,EAAAA,KAAA,WAEAJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaC,SAAA,EAC3BC,EAAAA,EAAAA,KAAAI,EAAAA,EAAA,IAAYvC,EAAOwC,KAAK,SAASC,SAAUpD,EAAQ6C,UACjDC,EAAAA,EAAAA,KAAAO,EAAAA,GAAA,CAAAR,UAIEC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,kCAGTC,EAAAA,EAAAA,KAAAO,EAAAA,GAAA,CAAQC,QArGSC,KACrB,GAAInD,EAAU0B,QAAS,CACrB,MAAML,EAASnB,EAAUwB,QACzBL,EAAOJ,WACL,CAAEE,QAASiC,OAAOC,KAAKC,MAAO,GAAoBC,QAAQ,KAC1DlC,EAAOT,OAGQ,IAAI4C,UACZC,OAAO,UAAWpC,EAAOT,MAElCS,EAAOR,UAAUQ,EAAOT,OAExBtD,EAAAA,EAAAA,IAAU,CACRoG,WAAY1D,EAAU0B,UAErBpC,MAAMwB,KACDtD,EAAAA,EAAAA,IAAUsD,EAAIrD,OAChBqE,EAAAA,GAAQ6B,QAAQ,CACd5B,QAAS,6HAEX3B,EAAUU,EAAI7D,QAGPU,EAAAA,EAAAA,IAAUmD,EAAIrD,OACrBqE,EAAAA,GAAQtD,MAAM,CACZuD,SAAY,OAAHjB,QAAG,IAAHA,OAAG,EAAHA,EAAK8C,cAAe,iEAE/BC,YAAW,KACTxD,EAAS,QAAQ,GAChB,MAEHyB,EAAAA,GAAQtD,MAAM,CACZuD,SAAY,OAAHjB,QAAG,IAAHA,OAAG,EAAHA,EAAK7D,OAAQ,0DAE1B,IAEDsC,OAAOyB,IACNc,EAAAA,GAAQtD,MAAM,CACZuD,QAASf,GAAO,8FAEZ,GAeZ,MACEc,EAAAA,GAAQtD,MAAM,CACZuD,QAAS,wFAEb,EAyCoCU,SAAC,8BACjCC,EAAAA,EAAAA,KAAAO,EAAAA,GAAA,CAAQC,QAvCEY,KACV3D,GACF4D,IAAK,mXAMDC,OAAOC,SAASC,6BAA6B/D,iJAIjD2B,EAAAA,GAAQ6B,QAAQ,CACd5B,QAAS,gDAGXD,EAAAA,GAAQtD,MAAM,CACZuD,QAAS,4EAEb,EAoB8BoC,MAAM,UAAS1B,SAAC,kCAIxC,C,qDCxLH,MAAM2B,EAAW,CACtB,SACA,UACA,YACA,cACA,SACA,SACA,eACA,YACA,YACA,aAGWC,EAAa,SAGbhC,EAAa,C","sources":["api/apis.ts","api/index.ts","webpack://react-mind-map/./src/pages/Home/index.module.less?a88e","pages/Home/index.tsx","utils/const.ts"],"sourcesContent":["import { getApi, posApi } from '.';\n\nexport const doLogin = (data) => {\n  return posApi('/user/doLogin', { ...data });\n};\n\nexport const register = (data) => {\n  return posApi('/user/register', { ...data });\n};\n\nexport const getCaptcha = (data) => {\n  return getApi('/user/getCaptcha', { ...data });\n};\n\nexport const isLogin = () => {\n  return getApi('/user/isLogin', {});\n};\n\nexport const uploadPic = (data: any) => {\n  return posApi('/file/upload', data);\n};\n\nexport const getFilePic = (data: any) => {\n  return getApi('/file/getFile', data);\n};\n","import { useConfigToken } from '@/store/login';\nimport axios from 'axios';\n\nexport const isSuccess = (code) => {\n  return ['200', 200].includes(code);\n};\n\nexport const isUnLogin = (code) => {\n  return ['100005', 100005].includes(code);\n};\n\nexport const updateUrl = '';\n\nconst instance = axios.create({\n  baseURL: 'http://47.121.126.205:8099/file-api/v1', //'http://www.shantu.top:8099/file-api/v1', // //'https://some-domain.com/api/',\n  // baseURL: 'http://www.shantu.top/file-api/v1',\n  timeout: 7000,\n  headers: {\n    'Content-Type': 'application/json;charset=utf-8',\n  },\n  // `withCredentials` 表示跨域请求时是否需要使用凭证\n  withCredentials: false, // default\n});\n// 添加请求拦截器\ninstance.interceptors.request.use(\n  function (config) {\n    // 在发送请求之前做些什么\n    return config;\n  },\n  function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n  },\n);\n\n// 添加响应拦截器\ninstance.interceptors.response.use(\n  function (response) {\n    // 对响应数据做点什么\n    return response;\n  },\n  function (error) {\n    // 对响应错误做点什么\n    return Promise.reject({\n      code: error.response.data.status,\n      data: error.response.data.error || '网络错误，请稍后重试',\n    });\n  },\n);\n\nexport const posApi = (url: string, data?: any): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const { getToken } = useConfigToken();\n    const token = getToken();\n    const axiosOptions = {\n      url: url,\n      method: 'post',\n      data: Object.assign({ ...data }),\n      headers: {\n        token,\n      },\n    };\n    instance\n      .request(axiosOptions)\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((e) => {\n        reject(e.message);\n      });\n  });\n};\n\nexport const getApi = (url: string, data?: any): Promise<any> => {\n  // 与业务无关的异常将在这里处理\n  return new Promise((resolve, reject) => {\n    const { getToken } = useConfigToken();\n    const token = getToken();\n    const axiosOptions = {\n      url: url,\n      method: 'get',\n      params: data,\n      headers: {\n        token,\n      },\n    };\n    instance\n      .request(axiosOptions)\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((e) => {\n        reject(e.message);\n      });\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"homeWarp\":\"index_homeWarp__vnToO\",\"prevImg\":\"index_prevImg__50Q3j\",\"upBox\":\"index_upBox__NUu-f\"};","import { useRef, useState } from 'react';\nimport { Button, message, Upload } from 'antd';\nimport styles from './index.module.less';\nimport upimg from '@/imgs/upimg.png';\nimport { isSuccess, isUnLogin, updateUrl } from '@/api';\nimport { uploadPic } from '@/api/apis';\nimport copy from 'copy-to-clipboard';\nimport { limitPicMb } from '@/utils/const';\nimport { useNavigate } from 'react-router';\n\nconst App = () => {\n  const [loading] = useState(false);\n  const [imageUrl, setImageUrl] = useState<any>('');\n  const base64Ref = useRef(null);\n  const updateRef = useRef(null);\n  const [fileId, setFileId] = useState('');\n  const navigate = useNavigate();\n\n  const props = {\n    action: updateUrl,\n    multiple: false,\n    headers: {},\n    showUploadList: false,\n    onStart(file) {\n      // console.log('onStart', file, file.name);\n    },\n    onSuccess(res, file) {\n      // console.log('onSuccess', res, file.name);\n    },\n    onError(err) {\n      // console.log('onError', err);\n    },\n    // 进度会调用这里\n    onProgress({ percent }, file) {\n      // console.log('onProgress', `${percent}%`, file.name);\n    },\n    // customRequest 参考文档\n    // https://upload-react-component.vercel.app/demo/custom-request\n    customRequest: function (option) {\n      // console.log('option', option);\n\n      const reader = new FileReader();\n      reader.readAsDataURL(option.file);\n      reader.onloadend = function (e) {\n        base64Ref.current = e.target.result;\n        updateRef.current = option;\n\n        // console.log('3333333333333', e.target.result);\n        if (e && e.target && e.target.result) {\n          // option.onSuccess();\n          // console.log('reader.result', reader);\n          // console.log('e', e);\n          setImageUrl(reader.result);\n        }\n      };\n      return {\n        abort() {\n          message.error({\n            content: '上传被终端请重试，请稍后重新',\n          });\n        },\n      };\n    },\n    beforeUpload: function (file) {\n      const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n      if (!isJpgOrPng) {\n        message.error('只能上传JPG或PNG文件!');\n        return false;\n      }\n      const isLt2M = file.size / 1024 / 1024 < limitPicMb;\n      if (!isLt2M) {\n        message.error(`图片大小需小于${limitPicMb}MB!`);\n        return false;\n      }\n      return isJpgOrPng && isLt2M;\n    },\n  };\n\n  const updateAndShare = () => {\n    if (base64Ref.current) {\n      const option = updateRef.current;\n      option.onProgress(\n        { percent: Number(Math.round((100 / 10000) * 100).toFixed(2)) },\n        option.file,\n      );\n\n      const formData = new FormData();\n      formData.append('files[]', option.file);\n\n      option.onSuccess(option.file);\n\n      uploadPic({\n        fileBase64: base64Ref.current,\n      })\n        .then((res) => {\n          if (isSuccess(res.code)) {\n            message.success({\n              content: '上传成功，点击下面的分享链接，分享给好友',\n            });\n            setFileId(res.data);\n          }\n          // 没登陆，则跳转到登陆页【带着登陆后回跳的参数】\n          else if (isUnLogin(res.code)) {\n            message.error({\n              content: res?.description || '登录超时，请重新登录',\n            });\n            setTimeout(() => {\n              navigate('login');\n            }, 2000);\n          } else {\n            message.error({\n              content: res?.data || '上传失败请稍后重试',\n            });\n          }\n        })\n        .catch((err) => {\n          message.error({\n            content: err || '服务器错误，上传失败请稍后重试',\n          });\n          return;\n        });\n\n      // axios\n      //   .post(action, formData, {\n      //     withCredentials,\n      //     headers,\n      //     onUploadProgress: ({ total, loaded }) => {\n      //       onProgress({ percent: Number(Math.round((loaded / total) * 100).toFixed(2)) }, file);\n      //     },\n      //   })\n      //   .then(({ data: response }) => {\n      //     onSuccess(response, file);\n      //   })\n      //   .catch(onError);\n    } else {\n      message.error({\n        content: '请先选择图片，再进行上传分享',\n      });\n    }\n  };\n\n  const copyUrl = () => {\n    if (fileId) {\n      copy(`\n\n        您的好友给您发了一张闪照片，点击查看：\n\n        由于微信限制较多，可能存在风控风险，可复制链接到[系统自带浏览器]打开查看：\n\n        ${window.location.origin}/reviewphoto?fileId=${fileId}\n\n        如果需要注册账号，请务必索取邀请码！！！\n      `);\n      message.success({\n        content: '已复制分享链接',\n      });\n    } else {\n      message.error({\n        content: '请先上传图片，再进行分享',\n      });\n    }\n  };\n\n  return (\n    <div className={styles.homeWarp}>\n      <div className={styles.prevImg}>\n        <img src={imageUrl || upimg} alt=\"avatar\" />\n      </div>\n      <div></div>\n\n      <div className={styles.upBox}>\n        <Upload {...props} name=\"avatar\" disabled={loading}>\n          <Button>\n            {/* {loading ? <LoadingOutlined /> : <PlusOutlined />} */}\n            {/* <LoadingOutlined /> */}\n            {/* <PlusOutlined /> */}\n            <div>选择图片</div>\n          </Button>\n        </Upload>\n        <Button onClick={updateAndShare}>上传图片</Button>\n        <Button onClick={copyUrl} color=\"default\">\n          分享连接\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n// const uploadProps = {\n//   customRequest({\n//     action,\n//     data,\n//     file,\n//     filename,\n//     headers,\n//     onError,\n//     onProgress,\n//     onSuccess,\n//     withCredentials,\n//   }) {\n//     // EXAMPLE: post form-data with 'axios'\n//     // eslint-disable-next-line no-undef\n//     const formData = new FormData();\n//     if (data) {\n//       Object.keys(data).forEach((key) => {\n//         formData.append(key, data[key] as string);\n//       });\n//     }\n//     formData.append(filename, file);\n\n//     // axios\n//     //   .post(action, formData, {\n//     //     withCredentials,\n//     //     headers,\n//     //     onUploadProgress: ({ total, loaded }) => {\n//     //       onProgress({ percent: Number(Math.round((loaded / total) * 100).toFixed(2)) }, file);\n//     //     },\n//     //   })\n//     //   .then(({ data: response }) => {\n//     //     onSuccess(response, file);\n//     //   })\n//     //   .catch(onError);\n\n//     return {\n//       abort() {\n//         console.log('upload progress is aborted.');\n//       },\n//     };\n//   },\n// };\n\n// type FileType = Parameters<GetProp<UploadProps, 'beforeUpload'>>[0];\n\n// const getBase64 = (img: FileType, callback: (url: string) => void) => {\n//   const reader = new FileReader();\n//   reader.addEventListener('load', () => callback(reader.result as string));\n//   reader.readAsDataURL(img);\n// };\n\n// const beforeUpload = (file: FileType) => {\n//   const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n//   if (!isJpgOrPng) {\n//     message.error('You can only upload JPG/PNG file!');\n//   }\n//   const isLt2M = file.size / 1024 / 1024 < 2;\n//   if (!isLt2M) {\n//     message.error('Image must smaller than 2MB!');\n//   }\n//   return isJpgOrPng && isLt2M;\n// };\n\n// const App: React.FC = () => {\n// const [loading, setLoading] = useState(false);\n// const [imageUrl, setImageUrl] = useState<string>();\n\n// const handleChange: UploadProps['onChange'] = (info) => {\n//   if (info.file.status === 'uploading') {\n//     setLoading(true);\n//     return;\n//   }\n//   if (info.file.status === 'done') {\n//     // Get this url from response in real world.\n//     getBase64(info.file.originFileObj as FileType, (url) => {\n//       setLoading(false);\n//       setImageUrl(url);\n//     });\n//   }\n// };\n\n// const uploadButton = (\n//   <button style={{ border: 0, background: 'none' }} type=\"button\">\n//     {loading ? <LoadingOutlined /> : <PlusOutlined />}\n//     <div style={{ marginTop: 8 }}>Upload</div>\n//   </button>\n// );\n\n// return (\n// <Flex gap=\"middle\" wrap>\n//   <Upload\n//     name=\"avatar\"\n//     listType=\"picture-card\"\n//     className=\"avatar-uploader\"\n//     showUploadList={true}\n//     action=\"https://660d2bd96ddfa2943b33731c.mockapi.io/api/upload\"\n//     beforeUpload={beforeUpload}\n//     onChange={handleChange}\n//   >\n//     {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n//   </Upload>\n// </Flex>\n// );\n// };\n","export const emailArr = [\n  'qq.com',\n  '163.com',\n  '@sina.com',\n  '@aliyun.com',\n  '@16com',\n  '@18com',\n  '@hotmail.com',\n  '@sohu.com',\n  '@mail.com',\n  'gmail.com',\n];\n\nexport const inventCode = '666888';\n\n\nexport const limitPicMb = 2"],"names":["doLogin","data","posApi","register","getCaptcha","getApi","uploadPic","getFilePic","isSuccess","code","includes","isUnLogin","updateUrl","instance","axios","create","baseURL","timeout","headers","withCredentials","interceptors","request","use","config","error","Promise","reject","response","status","url","resolve","getToken","useConfigToken","token","axiosOptions","method","Object","assign","then","catch","e","message","params","App","loading","useState","imageUrl","setImageUrl","base64Ref","useRef","updateRef","fileId","setFileId","navigate","useNavigate","props","action","multiple","showUploadList","onStart","file","onSuccess","res","onError","err","onProgress","_ref","percent","customRequest","option","reader","FileReader","readAsDataURL","onloadend","current","target","result","abort","_message","content","beforeUpload","isJpgOrPng","type","isLt2M","size","limitPicMb","_jsxs","className","styles","children","_jsx","src","upimg","alt","_Upload","name","disabled","_Button","onClick","updateAndShare","Number","Math","round","toFixed","FormData","append","fileBase64","success","description","setTimeout","copyUrl","copy","window","location","origin","color","emailArr","inventCode"],"sourceRoot":""}