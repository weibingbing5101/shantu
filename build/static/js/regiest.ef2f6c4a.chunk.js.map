{"version":3,"file":"static/js/regiest.ef2f6c4a.chunk.js","mappings":"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","sources":["api/apis.ts","api/index.ts","hooks/index.ts","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","webpack://react-mind-map/./src/pages/Regiest/index.module.less?6ef0","../node_modules/@ant-design/icons-svg/es/asn/CodeOutlined.js","../node_modules/@ant-design/icons/es/icons/CodeOutlined.js","pages/Regiest/index.tsx","utils/const.ts"],"sourcesContent":["import { getApi, posApi } from '.';\n\nexport const doLogin = (data) => {\n  return posApi('/user/doLogin', { ...data });\n};\n\nexport const register = (data) => {\n  return posApi('/user/register', { ...data });\n};\n\nexport const getCaptcha = (data) => {\n  return getApi('/user/getCaptcha', { ...data });\n};\n\nexport const isLogin = () => {\n  return getApi('/user/isLogin', {});\n};\n\nexport const uploadPic = (data: any) => {\n  return posApi('/file/upload', data);\n};\n\nexport const getFilePic = (data: any) => {\n  return getApi('/file/getFile', data);\n};\n","import { useConfigToken } from '@/store/login';\nimport axios from 'axios';\n\nexport const isSuccess = (code) => {\n  return ['200', 200].includes(code);\n};\n\nexport const isUnLogin = (code) => {\n  return ['100005', 100005].includes(code);\n};\n\nexport const updateUrl = '';\n\nconst instance = axios.create({\n  baseURL: 'http://47.121.126.205:8099/file-api/v1', //'http://www.shantu.top:8099/file-api/v1', // //'https://some-domain.com/api/',\n  // baseURL: 'http://www.shantu.top/file-api/v1',\n  timeout: 7000,\n  headers: {\n    'Content-Type': 'application/json;charset=utf-8',\n  },\n  // `withCredentials` 表示跨域请求时是否需要使用凭证\n  withCredentials: false, // default\n});\n// 添加请求拦截器\ninstance.interceptors.request.use(\n  function (config) {\n    // 在发送请求之前做些什么\n    return config;\n  },\n  function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n  },\n);\n\n// 添加响应拦截器\ninstance.interceptors.response.use(\n  function (response) {\n    // 对响应数据做点什么\n    return response;\n  },\n  function (error) {\n    // 对响应错误做点什么\n    return Promise.reject({\n      code: error.response.data.status,\n      data: error.response.data.error || '网络错误，请稍后重试',\n    });\n  },\n);\n\nexport const posApi = (url: string, data?: any): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const { getToken } = useConfigToken();\n    const token = getToken();\n    const axiosOptions = {\n      url: url,\n      method: 'post',\n      data: Object.assign({ ...data }),\n      headers: {\n        token,\n      },\n    };\n    instance\n      .request(axiosOptions)\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((e) => {\n        reject(e.message);\n      });\n  });\n};\n\nexport const getApi = (url: string, data?: any): Promise<any> => {\n  // 与业务无关的异常将在这里处理\n  return new Promise((resolve, reject) => {\n    const { getToken } = useConfigToken();\n    const token = getToken();\n    const axiosOptions = {\n      url: url,\n      method: 'get',\n      params: data,\n      headers: {\n        token,\n      },\n    };\n    instance\n      .request(axiosOptions)\n      .then((data) => {\n        resolve(data.data);\n      })\n      .catch((e) => {\n        reject(e.message);\n      });\n  });\n};\n","import { useLocation } from 'react-router-dom';\n\nfunction useUrlParams() {\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n\n  const paramsObject = {};\n  params.forEach((value, key) => {\n    paramsObject[key] = value;\n  });\n\n  return paramsObject;\n}\n\nexport { useUrlParams };\n","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","// extracted by mini-css-extract-plugin\nexport default {\"loginWarp\":\"index_loginWarp__Fq-J-\",\"innerWarp\":\"index_innerWarp__VGWN4\"};","// This icon file is generated automatically.\nvar CodeOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M516 673c0 4.4 3.4 8 7.5 8h185c4.1 0 7.5-3.6 7.5-8v-48c0-4.4-3.4-8-7.5-8h-185c-4.1 0-7.5 3.6-7.5 8v48zm-194.9 6.1l192-161c3.8-3.2 3.8-9.1 0-12.3l-192-160.9A7.95 7.95 0 00308 351v62.7c0 2.4 1 4.6 2.9 6.1L420.7 512l-109.8 92.2a8.1 8.1 0 00-2.9 6.1V673c0 6.8 7.9 10.5 13.1 6.1zM880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" } }] }, \"name\": \"code\", \"theme\": \"outlined\" };\nexport default CodeOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CodeOutlinedSvg from \"@ant-design/icons-svg/es/asn/CodeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CodeOutlined = function CodeOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CodeOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(CodeOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'CodeOutlined';\n}\nexport default RefIcon;","import { memo, useEffect, useRef, useState } from 'react';\nimport {\n  AutoComplete,\n  AutoCompleteProps,\n  Button,\n  Checkbox,\n  Col,\n  Flex,\n  Form,\n  Input,\n  message,\n  Row,\n} from 'antd';\n\nimport styles from './index.module.less';\nimport { CodeOutlined, LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getCaptcha, register } from '@/api/apis';\nimport { isSuccess } from '@/api';\nimport { emailArr, inventCode } from '@/utils/const';\nimport { useConfigToken, useGonfigUserName } from '@/store/login';\nimport { useUrlParams } from '@/hooks';\n\nconst Regiest = () => {\n  const navigate = useNavigate();\n  const urlData: any = useUrlParams();\n\n  const [form] = Form.useForm();\n  const { setUserName } = useGonfigUserName();\n  const { setToken } = useConfigToken();\n\n  const [codeDisable, setCodeDisable] = useState(true);\n  const [timeNum, setTimeNum] = useState(undefined); // 初始化 undefined\n  const timerRef = useRef(null);\n\n  // 发送验证码\n  const sendCode = async () => {\n    if (!codeDisable) {\n      const forms = form.getFieldsValue(true);\n\n      let result = await getCaptcha({ account: forms.username });\n      if (isSuccess(result.code)) {\n        message.success({\n          content: '发送成功，请前往邮箱查看',\n        });\n        setCodeDisable(true);\n        setTimeNum(300);\n      } else {\n        message.error({\n          content: result.data || '网络问题，请重新发送',\n        });\n      }\n    }\n  };\n\n  // 倒计时\n  useEffect(() => {\n    // console.log('进入effect', timeNum);\n\n    // 初始化时不做任何操作\n    if (timeNum === undefined) {\n      return;\n    }\n\n    // 给定倒计时数字\n    if (timeNum > 0) {\n      timerRef.current = setTimeout(() => {\n        setTimeNum(timeNum - 1);\n        // console.log('设置值', timeNum - 1);\n      }, 1000);\n    } else {\n      const [forms] = form.getFieldsError(['username']);\n      !forms.errors.length && setCodeDisable(false);\n    }\n\n    // 更新之后销毁上一个\n    return () => {\n      if (timerRef.current) {\n        // console.log('销毁', timeNum);\n        clearTimeout(timerRef.current);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [timeNum]);\n\n  // 邮箱下拉\n  const [options, setOptions] = useState<AutoCompleteProps['options']>([]);\n  const handleSearch = (value: string) => {\n    setOptions(() => {\n      if (!value || value.includes('@')) {\n        return [];\n      }\n      return emailArr.map((domain) => ({\n        label: `${value}@${domain}`,\n        value: `${value}@${domain}`,\n      }));\n    });\n  };\n\n  // 用户名校验\n  const valUserName = (rules, value, callback) => {\n    // console.log(rules, value, callback);\n\n    if (/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/.test(value)) {\n      callback();\n      !timeNum && setCodeDisable(false);\n    } else {\n      callback(new Error('请输入正确的邮箱'));\n      setCodeDisable(true);\n\n      // return {\n      //   pattern: false,\n      //   message: '',\n      // };\n    }\n  };\n\n  // 校验密码\n  const valPwd = (rules, value, callback) => {\n    const forms = form.getFieldsValue(true);\n    // console.log(rules, value, callback, forms);\n\n    if (!value) {\n      callback(new Error('请输入密码'));\n      return;\n    }\n\n    if (value.length < 6) {\n      callback(new Error('请输入超过6位的密码'));\n      return;\n    }\n\n    if (forms.password === forms.repassword) {\n      // form.setFieldValue('repassword', forms.repassword);   // 设置其它input值\n      // 设置其它input 所有信息集\n      form.setFields([\n        {\n          name: 'repassword',\n          // value: e.target.value,\n          errors: null,\n        },\n      ]);\n\n      form.setFields([\n        {\n          name: 'password',\n          // value: e.target.value,\n          errors: null,\n        },\n      ]);\n\n      callback();\n    } else {\n      callback(new Error('请确保两次输入的密码一样'));\n    }\n  };\n\n  // 邀请码校验\n  const valInventCode = (rules, value, callback) => {\n    const valueTmp = value;\n    if (valueTmp === inventCode) {\n      callback();\n    } else {\n      callback(new Error('请联系邀请人索取邀请码'));\n    }\n  };\n\n  // 提交\n  const onFinish = async (values: any) => {\n    const res: any = await register({\n      username: values.username,\n      password: values.password,\n      captcha: values.emailCode,\n      isLogin: true,\n    });\n\n    if (isSuccess(res.code)) {\n      setUserName(values.username);\n      setToken(res.data.token);\n      message.success({\n        content: '注册成功，即将自动登陆并跳转访问页面',\n      });\n    } else {\n      message.error({\n        content: res.data || '注册失败，请稍后重试',\n      });\n      return;\n    }\n\n    setTimeout(() => {\n      if (urlData?.from) {\n        window.location.href = urlData.from;\n      }\n      navigate('/');\n    }, 3000);\n\n    // console.log('Received values of form: ', values);\n  };\n\n  return (\n    <div className={styles.loginWarp}>\n      <div className={styles.innerWarp}>\n        <Form form={form} name=\"login\" initialValues={{ remember: true }} onFinish={onFinish}>\n          <Form.Item name=\"username\" rules={[{ required: true, validator: valUserName }]}>\n            <AutoComplete\n              placeholder=\"请输入邮箱用户名\"\n              prefix={<UserOutlined />}\n              onSearch={handleSearch}\n              options={options}\n            />\n          </Form.Item>\n\n          <Form.Item name=\"emailCode\" rules={[{ required: true, message: '请输入邮箱验证码' }]}>\n            <Row gutter={8} wrap={false}>\n              <Col flex={2}>\n                <Input\n                  minLength={6}\n                  maxLength={6}\n                  prefix={<CodeOutlined />}\n                  type=\"text\"\n                  placeholder=\"请输入邮箱验证码\"\n                />\n              </Col>\n              <Col flex={1}>\n                <Button onClick={sendCode} disabled={codeDisable}>\n                  {timeNum ? `${timeNum}秒后重新发送` : '发送验证码'}\n                </Button>\n              </Col>\n            </Row>\n          </Form.Item>\n\n          <Form.Item name=\"password\" rules={[{ required: true, validator: valPwd }]}>\n            <Input.Password\n              minLength={6}\n              prefix={<LockOutlined />}\n              type=\"password\"\n              placeholder=\"请输入密码\"\n            />\n          </Form.Item>\n\n          <Form.Item name=\"repassword\" rules={[{ required: true, validator: valPwd }]}>\n            <Input.Password\n              minLength={6}\n              prefix={<LockOutlined />}\n              type=\"password\"\n              placeholder=\"请再次输入密码\"\n            />\n          </Form.Item>\n\n          <Form.Item name=\"inventCode\" rules={[{ required: true, validator: valInventCode }]}>\n            <Input\n              minLength={6}\n              prefix={<LockOutlined />}\n              type=\"text\"\n              placeholder=\"邀请码找推荐你的人索取\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Flex justify=\"space-between\" align=\"center\">\n              <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                <Checkbox>记住状态</Checkbox>\n              </Form.Item>\n            </Flex>\n          </Form.Item>\n\n          <Form.Item>\n            <Button block type=\"primary\" htmlType=\"submit\">\n              注册&登录\n            </Button>\n            或\n            <Link\n              to={{\n                pathname: '/login',\n              }}\n            >\n              去登录\n            </Link>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Regiest);\n","export const emailArr = [\n  'qq.com',\n  '163.com',\n  '@sina.com',\n  '@aliyun.com',\n  '@16com',\n  '@18com',\n  '@hotmail.com',\n  '@sohu.com',\n  '@mail.com',\n  'gmail.com',\n];\n\nexport const inventCode = '666888';\n\n\nexport const limitPicMb = 2"],"names":["doLogin","data","posApi","register","getCaptcha","getApi","uploadPic","getFilePic","isSuccess","code","includes","isUnLogin","updateUrl","instance","axios","create","baseURL","timeout","headers","withCredentials","interceptors","request","use","config","error","Promise","reject","response","status","url","resolve","getToken","useConfigToken","token","axiosOptions","method","Object","assign","then","catch","e","message","params","useUrlParams","location","useLocation","URLSearchParams","search","paramsObject","forEach","value","key","CodeOutlined","props","ref","React","AntdIcon","_objectSpread","icon","CodeOutlinedSvg","Regiest","navigate","useNavigate","urlData","form","_Form","useForm","setUserName","useGonfigUserName","setToken","codeDisable","setCodeDisable","useState","timeNum","setTimeNum","undefined","timerRef","useRef","useEffect","current","setTimeout","forms","getFieldsError","errors","length","clearTimeout","options","setOptions","valPwd","rules","callback","getFieldsValue","Error","password","repassword","setFields","name","_jsx","className","styles","children","_jsxs","initialValues","remember","onFinish","async","res","username","values","captcha","emailCode","isLogin","_message","success","content","from","window","href","Item","required","validator","valUserName","test","_AutoComplete","placeholder","prefix","UserOutlined","onSearch","emailArr","map","domain","label","_Row","gutter","wrap","_Col","flex","_Input","minLength","maxLength","type","_Button","onClick","result","account","disabled","Password","LockOutlined","valInventCode","inventCode","_Flex","justify","align","valuePropName","noStyle","_Checkbox","block","htmlType","Link","to","pathname","memo","limitPicMb"],"sourceRoot":""}